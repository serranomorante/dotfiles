# This config demonstrates how international characters can be mapped using
# keyd. It works by using the display server's (i.e wayland/X) compose key
# functionality in conjunction with macros to generate the glyph of interest.

# For this to work 'setxkbmap -option compose:menu' must be run after keyd has started.

# A list of compose sequences can be found in /usr/share/X11/locale/en_US.UTF-8/Compose on most systems.

[ids]
k:{{ ansible_hhkb_keyboard_id }}
k:{{ ansible_mx_keys_keyboard_id }}
k:{{ ansible_internal_keyboard_device_1 }}

[global]
disable_modifier_guard = 1

[main]
capslock = layer(control)
tab = overload(tab_as_modifier, tab)

[meta]
# Fix conflict with dwm shortcut (to toggle between current and previous tag)
tab = macro(leftalt+rightalt 50ms leftmeta+tab)
1 = macro(leftalt+rightalt 50ms leftmeta+1)
2 = macro(leftalt+rightalt 50ms leftmeta+2)
3 = macro(leftalt+rightalt 50ms leftmeta+3)
4 = macro(leftalt+rightalt 50ms leftmeta+4)
5 = macro(leftalt+rightalt 50ms leftmeta+5)
6 = macro(leftalt+rightalt 50ms leftmeta+6)
7 = macro(leftalt+rightalt 50ms leftmeta+7)
8 = macro(leftalt+rightalt 50ms leftmeta+8)
9 = macro(leftalt+rightalt 50ms leftmeta+9)
# Draw on top of the screen
z = command({{ xorg_display_env_vars }} $(which gromit-mpx) --toggle)
c = command({{ xorg_display_env_vars }} $(which gromit-mpx) --clear)
v = command({{ xorg_display_env_vars }} $(which gromit-mpx) --visibility)

[meta+shift]
# Fix conflict with dwm shortcut (to close window)
c = M-S-c
o = command(keyd do leftalt+rightalt; {{ xorg_display_env_vars }} xclip -selection clipboard -o | {{ xorg_display_env_vars }} $(which xdotool) type --clearmodifiers "$(head -c 20 </dev/stdin)")
# Open kitty terminal
enter = macro(kpasterisk+1)

[meta+control]
# Fix conflict with dwm shortcut (to focus master)
# Use `... > /tmp/logfile 2>&1` to debug any issues
space = macro(leftalt+rightalt 50ms leftmeta+leftcontrol+space 50ms leftmeta+m 50ms leftmeta+f)

[tab_as_modifier]
# Toggle warpd hint mode. Use `... > /tmp/logfile 2>&1` to debug any issues
f = command(keyd do leftalt+rightalt; {{ xorg_display_env_vars }} $(which warpd) --config {{ ansible_env.HOME }}/.config/warpd/config --hint --oneshot --foreground && keyd do leftcontrol+rightcontrol)
# Simulate readline shortcuts
i = toggle(readline)
# mouseless will receive this keymap and enable mouse layer
space = macro(leftcontrol+rightcontrol)

[readline]

[readline+control]
b = left
f = right
a = home
e = end
d = delete
w = C-backspace

[readline+alt]
b = C-left
f = C-right
d = C-delete

[readline+altgr]
b = C-left
f = C-right
d = C-delete

[control]
space = oneshot(spanish)

[control+shift]
# Open cwd in kitty terminal
f = macro(kpasterisk+2)

[spanish]
a = command({{ xorg_display_env_vars }} $(which xdotool) key --clearmodifiers aacute)
e = command({{ xorg_display_env_vars }} $(which xdotool) key --clearmodifiers eacute)
i = command({{ xorg_display_env_vars }} $(which xdotool) key --clearmodifiers iacute)
o = command({{ xorg_display_env_vars }} $(which xdotool) key --clearmodifiers oacute)
u = command({{ xorg_display_env_vars }} $(which xdotool) key --clearmodifiers uacute)
n = command({{ xorg_display_env_vars }} $(which xdotool) key --clearmodifiers ntilde)

[spanish+shift]
a = command({{ xorg_display_env_vars }} $(which xdotool) key Aacute)
e = command({{ xorg_display_env_vars }} $(which xdotool) key Eacute)
i = command({{ xorg_display_env_vars }} $(which xdotool) key Iacute)
o = command({{ xorg_display_env_vars }} $(which xdotool) key Oacute)
u = command({{ xorg_display_env_vars }} $(which xdotool) key Uacute)
n = command({{ xorg_display_env_vars }} $(which xdotool) key Ntilde)
1 = command({{ xorg_display_env_vars }} $(which xdotool) key exclamdown)
4 = command({{ xorg_display_env_vars }} $(which xdotool) key EuroSign)
/ = command({{ xorg_display_env_vars }} $(which xdotool) key questiondown)
