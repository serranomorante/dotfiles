---
- name: "[archlinux] Editor code generation: register binaries paths"
  ansible.builtin.command: which {{ executable }}
  register: binaries
  loop_control:
    loop_var: executable
  loop:
    - lua-language-server
    - pylsp
    - gopls
    - gofmt
    - dlv
    - clangd
    - fish-lsp
    - vscode-html-language-server
    - vscode-css-language-server
    - vscode-json-language-server
    - vscode-eslint-language-server
    - phpactor
    - marksman
  changed_when: false

- name: "[archlinux] Editor code generation: register volta's default node path"
  ansible.builtin.command: volta run --node "{{ node_system_default_version }}" which node
  register: var_system_default_node
  changed_when: false

- name: "[archlinux] Editor code generation: register volta's eslint_d path"
  ansible.builtin.command: volta run --node "{{ node_system_default_version }}" which eslint_d
  register: var_system_default_eslint_d
  changed_when: false

- name: "[archlinux] Editor code generation: register volta's eslint_d path"
  ansible.builtin.command: volta run --node "{{ node_system_default_version }}" which js-beautify
  register: var_system_default_js_beautify
  changed_when: false

- name: "[archlinux] Editor code generation: ensure binaries code-generation"
  ansible.builtin.blockinfile:
    dest: ~/.config/nvim/lua/serranomorante/binaries.lua
    create: true
    marker: "-- {mark} ANSIBLE MANAGED BLOCK"
    mode: "644"
    block: |
      return {
        {% for pkg_path in binaries.results -%}
          {{ pkg_path.executable | replace("-", "_") }} = function() return "{{ pkg_path.stdout }}" end,
        {% endfor %}
        system_default_node = function() return "{{ var_system_default_node.stdout }}" end,
        eslint_d_executable = function() return "{{ var_system_default_eslint_d.stdout }}" end,
        js_beautify_executable = function() return "{{ var_system_default_js_beautify.stdout }}" end,
        vscode_js_debug_dap_executable = function() return vim.env.HOME .. "/repos/vscode-js-debug/dist/src/dapDebugServer.js" end,
        cppdbg_dap_executable = function() return vim.env.HOME .. "/apps/lang-tools/cpptools/extension/debugAdapters/bin/OpenDebugAD7" end,
        bashdb_dap_executable = function() return vim.env.HOME .. "/apps/lang-tools/bash-debug-adapter" end,
        php_dap_executable = function() return "/usr/lib/node_modules/php-debug/out/phpDebug.js" end,
        debugpy_dap_executable = function() return vim.env.HOME .. "/apps/lang-tools/debugpy/.venv/bin/python" end,
        go_dap_executable = function() return vim.env.HOME .. "/repos/vscode-go/extension/dist/debugAdapter.js" end
      }
