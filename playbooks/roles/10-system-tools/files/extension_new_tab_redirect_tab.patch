diff --git a/js/background.js b/js/background.js
index 5c14d91..1cb6558 100644
--- a/js/background.js
+++ b/js/background.js
@@ -44,83 +44,6 @@ async function saveInitial() {
     save(options, "local");
 }
 
-// When installed, show welcome page
-chrome.runtime.onInstalled.addListener(function (details) {
-
-    var current = +new Date();
-    var sixMonths = 15894000000; // milliseconds = 6.04 months.
-
-    if (details.reason === "chrome_update") {
-        return void 0;
-    } else if (details.reason === "install" || details.reason === "update") {
-        return retrieve(allOptions, "local", function (localQuery) {
-            return retrieve(allOptions, "sync", function (query) {
-                var canShowWelcome = true;
-                log("Pulled sync options:", query);
-
-                if((0+query.lastInstall) > 1){
-                    var installed = parseInt(query.lastInstall, 10);
-
-                    // 500s buffer between install and running listener should be safe
-                    var listener5sBuffer = Math.abs(installed - current);
-                    var listener5sBufferCheck = (listener5sBuffer > 500000);
-
-                    // we must wait at least 6 months to show welcome page again
-                    var installDiff = (current - installed);
-                    var sixMonthCheck = (installDiff > sixMonths);
-
-                    canShowWelcome =  listener5sBufferCheck && sixMonthCheck;
-
-                    log(
-                        'Can we show welcome by checks?(%s), ' +
-                        'Installed: %d, %d ms between last install and listener, ' +
-                        '%d ms since last install',
-                        canShowWelcome, installed, listener5sBuffer, installDiff);
-                }
-
-                if (localQuery.showWelcome == false || query.showWelcome == false) {
-                    log("User doesn't ever want to see the welcome page. canShowWelcome=false");
-                    canShowWelcome = false;
-                }
-
-                var options = {};
-
-                // user previously installed on another machine, either sync or do initial setup
-                if (query["syncOptions"]) {
-                    log("saving sync option setup");
-                    allOptions.forEach(function (elem) {
-                        options[elem] = query[elem];
-                    });
-
-                    options["lastInstall"] = current;
-                    save(options, "local");
-                } else if(details.reason === "install") {
-                    // User hasn't previously installed, save defaults
-                    log("saving initial setup (not syncing)");
-                    saveInitial();
-                }
-
-                // be sure to save when we last installed (or updated)
-                save({ "lastInstall": +new Date() }, "sync");
-
-                // only display the upgrade message once, and only for true upgrades
-                if((manifest.version === "3.1" || manifest.version === "3.1.1" ) && details.reason === "update" && !localQuery["upgrade_3.1"]) {
-                    log("background.js: showing v3.1 important upgrade message");
-                    save({ "upgrade_3.1": true }, "local");
-                    return chrome.tabs.create({"url": "upgraded/3.1.html" });
-                }
-
-                log("Try to show welcome on %s: %s (should only show on install)", details.reason, canShowWelcome);
-                // on initial install, or every 6 months, show Welcome Page
-                if (canShowWelcome && details.reason === "install") {
-                    log("background.js: showing welcome page");
-                    return chrome.tabs.create({"url": "welcome.html" });
-                }
-            });
-        });
-    }
-});
-
 chrome.storage.onChanged.addListener(function (changes, namespace) {
     retrieve("syncOptions", "local", function (items) {
         if (items.syncOptions == "false" || namespace != "sync") return;
diff --git a/main.html b/main.html
index d27ffb5..13f3920 100644
--- a/main.html
+++ b/main.html
@@ -1,125 +1,3 @@
-<!doctype html>
-<html lang="en" ng-app="newTab">
 <head>
-    <meta charset="utf-8">
-    <meta name="viewport" content="width=device-width,initial-scale=1.0">
-    <title>New Tab Redirect</title>
-    <script type="text/javascript" src="js/defer_bootstrap.js"></script>
-    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
-    <link rel="stylesheet" href="css/common.css" type="text/css">
-    <script type="text/javascript" src="js/vendor/angular/angular-loader.min.js"></script>
-    <script type="text/javascript" src="js/vendor/angular/angular.min.js"></script>
+    <meta http-equiv="refresh" content="0;URL=https://developer.wikimedia.org/">
 </head>
-<body>
-
-<div ng-cloak>
-    <div class="main-container" ng-controller="MainController">
-
-        <span id="app-prefs"><a href="#" class="plain" ng-click="show_prefs=true"><i class="fa fa-gears"></i></a></span>
-
-        <div class="dialog" ng-show="show_prefs">
-            <div class="content">
-                <h2>Display Preferences</h2>
-                <div class="setting">
-                    <h3><i class="fa fa-bookmark-o"></i> Bookmarks Bar</h3>
-                    <toggle-permission permission="bookmarks" granted="permissions.bookmarks"></toggle-permission>
-                    <label>
-                        <input type="checkbox" ng-model="enable_bookmarks" ng-disabled="!permissions.bookmarks"> Enable
-                    </label>
-                    <div>
-                        Show <input type="number" min="5" max="40" ng-model="bookmark_count" ng-disabled="!permissions.bookmarks" title="Too many bookmarks will cause the box to become very large"> bookmarks
-                    </div>
-                </div>
-                <div class="setting">
-                    <h3><i class="fa fa-star-o"></i> Top Sites Panel</h3>
-                    <toggle-permission permission="topSites" granted="permissions.topSites"></toggle-permission>
-                    <label>
-                        <input type="checkbox" ng-model="enable_top" ng-disabled="!permissions.topSites"> Enable
-                    </label>
-                    <div>
-                        Show <input type="number" min="5" max="20" ng-model="top_count" ng-disabled="!permissions.topSites" title="Too many top sites will cause the box to become very large"> top sites
-                    </div>
-                </div>
-
-                <div class="setting">
-                    <h3><i class="fa fa-external-link"></i> Open apps in New Window</h3>
-                    <toggle-permission permission="tabs" granted="permissions.tabs"></toggle-permission>
-                </div>
-
-                <button ng-click="save_preferences()" class="pull-right">Close</button>
-            </div>
-        </div>
-
-        <div class="app-header">
-            <span class="app-logo"><a href="options.html" target="_self"><i class="fa">&nbsp;</i> {{extension_name}}</a></span>
-            <span class="webstore"><a href="https://chrome.google.com/webstore" target="_self" class="plain"><i class="fa" style="background:url('/_favicon/?pageUrl=https://chrome.google.com/webstore/category/apps') no-repeat;"></i> Chrome Web Store</a></span>
-        </div>
-
-        <div class="container bookmarks-container" ng-show="permissions.bookmarks && enable_bookmarks && bookmarks.length > 0" ng-class="{'populated':bookmarks.length > 0}">
-            <x ng-if="enable_bookmarks" ng-repeat="b in bookmarks">
-                <a class="bookmark" ng-href="{{b.url}}" title="{{b.title}}" target="_self" ng-if="is_special_uri(b.url) == false">
-                    <i class="fa" style="background:url('_favicon/?pageUrl={{b.url||'example.com'}}') no-repeat"></i>
-                    <span>{{b.title}}</span>
-                </a>
-                <a class="bookmark special-href" ng-click="navigate(b.url)" title="{{b.title}}" ng-if="is_special_uri(b.url) == true">
-                    <i class="fa" style="background:url('_favicon/?pageUrl={{b.url||'example.com'}}') no-repeat"></i>
-                    <span>{{b.title}}</span>
-                </a>
-            </x>
-        </div>
-
-        <div ng-show="permissions.management" class="container app-container clear" ng-class="{'after-bookmarks': enable_bookmarks && bookmarks.length > 0,'populated':apps.length > 0}">
-            <div><input type="search" ng-model="q.name" ng-show="apps.length > 5" placeholder="Filter apps"></div>
-            <chrome-app ng-repeat="app in (apps | filter:q)" app="app" permissions="permissions"></chrome-app>
-            <div ng-show="(apps | filter:q).length == 0" style="margin:1.5em">No matches found.</div>
-            <span class="clear"></span>
-        </div>
-
-        <div ng-if="!permissions.management" class="container app-container no-app-permissions"
-             ng-class="{'after-bookmarks': enable_bookmarks && bookmarks.length > 0, 'populated': permissions.management == false}">
-            <h3>Hello.</h3>
-            <p>
-                This extension doesn't yet have the permissions to read and manage your Apps!
-                It requires the 'management' permission to do this. You can read more about <a href="https://support.google.com/chrome_webstore/answer/186213?hl=en" target="_blank">permissions</a> and
-                their <a href="http://developer.chrome.com/extensions/permission_warnings" target="_blank">warnings</a> before proceeding.
-            </p>
-            <p>
-                <toggle-permission permission="management" granted="permissions.management"></toggle-permission>
-            </p>
-            <p>
-                Permissions and display options can be configured by clicking the gear icon in the bottom right corner.
-                That's where you'll find extra, opt-in functionality like the top sites panel and quick bookmarks 'bar'.
-            </p>
-            <p>
-                You'll only see that annoying popup to request permissions once. After that, you can grant or deny any individual
-                permissions at any time without the extra popup (except the management permission, because what good's an Apps page without that?).
-            </p>
-            <p>
-                Enable what you want, disable what you don't. You can always check the permissions of any installed extension or app at chrome://extensions (also accessible under <code>Menu -> Tools -> Extensions</code>. Safe browsing!
-            </p>
-            <span class="clear"></span>
-        </div>
-
-        <div id="top-sites" ng-if="permissions.topSites && enable_top && top.length > 0">
-            <div class="top-sites-wrapper">
-                <span class="top-sites-header">Top Sites</span>
-                <div class="inner">
-                    <a ng-repeat="site in top" href="{{site.url}}" title="{{site.title}}"
-                       target="_self" class="bookmark">
-                        <i class="fa" style="background:url('_favicon/?pageUrl={{site.url}}') no-repeat"></i>
-                        <span>{{site.title}}</span>
-                    </a>
-                </div>
-            </div>
-        </div>
-    </div>
-</div>
-
-<script type="text/javascript" src="js/controllers.js"></script>
-<script type="text/javascript" src="js/directives.js"></script>
-<script type="text/javascript" src="js/filters.js"></script>
-<script type="text/javascript" src="js/services.js"></script>
-<script type="text/javascript" src="js/app.js"></script>
-<script type="text/javascript" src="js/redirect.js"></script>
-</body>
-</html>
