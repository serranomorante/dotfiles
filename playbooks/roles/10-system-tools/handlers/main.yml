---
# https://www.reddit.com/r/termux/comments/11blc9u/comment/j9z97pp
- name: handler_restart_gpg_agent
  ansible.builtin.command: |
    gpgconf --kill gpg-agent
    gpg-agent --daemon --use-standard-socket
  changed_when: false
  listen: handlergroup_restart_gpg_services

- name: handler_restart_gpg_tty
  ansible.builtin.command: gpg-connect-agent updatestartuptty /bye >/dev/null
  changed_when: false
  listen: handlergroup_restart_gpg_services

- name: handler_ensure_keyd_service
  become: true
  ansible.builtin.systemd_service:
    scope: system
    name: keyd.service
    state: started
    enabled: true
    masked: false

- name: handler_restart_keyd
  become: true
  ansible.builtin.command: keyd reload
  changed_when: true

- name: handler_reload_udev_rules
  become: true
  ansible.builtin.command: udevadm control --reload-rules
  changed_when: false

- name: handler_update_desktop_database
  ansible.builtin.command: update-desktop-database ~/.local/share/applications
  changed_when: false

- name: handler_ensure_mouseless_service
  ansible.builtin.systemd_service:
    scope: user
    name: mouseless.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_readline_mode_notify_service
  become: true
  ansible.builtin.systemd_service:
    scope: system
    name: readline-mode-notify.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_mypaint_service
  ansible.builtin.systemd_service:
    scope: user
    name: mypaint.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_compositor_service
  ansible.builtin.systemd_service:
    scope: user
    name: compositor.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_docker_service
  become: true
  ansible.builtin.systemd_service:
    scope: system
    name: docker.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_hypothesis_oauth_client_id
  ansible.builtin.replace:
    path: ~/repos/hypothesis-extension/settings/custom-dev.json
    regexp: "^\\{"
    replace: '{\n  "oauthClientId": "{{ ansible_facts.hypothesis_oauth_client_id | default(None) }}",'
  when: ansible_facts.hypothesis_oauth_client_id is not undefined

- name: handler_generate_browser_debugger_service
  ansible.builtin.blockinfile:
    dest: ~/dotfiles/systemd/dot-config/systemd/user/browser-debugger.service
    create: true
    insertafter: "^\\[Service\\]"
    marker: "## {mark} ANSIBLE MANAGED BLOCK - SETUP BROWSER"
    block: >
      ExecStart=/usr/bin/chromium --remote-debugging-port=9222 --load-extension={% for item in browser_local_extensions if (item.hide is not defined) or (not item.hide) %}{{ item.path }}{% if not loop.last %},{% endif %}{% endfor %}
    mode: "644"
  vars:
    prefix: "%h"

- name: handler_ensure_brave_desktop_file
  ansible.builtin.replace:
    path: ~/.local/share/applications/brave-browser.desktop
    regexp: "^(Exec=).*"
    replace: "\\1bravennn --load-extension={{ browser_local_extensions | map(attribute='path') | join(',') }} %u"
  notify: "10-system-tools : handler_update_desktop_database"

- name: handler_build_mouseless
  ansible.builtin.command: go build -ldflags="-s -w" .
  args:
    chdir: ~/external/repos/mouseless
    creates: ~/external/repos/mouseless/mouseless
  notify: handler_ensure_mouseless_service

- name: handler_ensure_mouseless_udev_rules
  # https://github.com/jbensmann/mouseless?tab=readme-ov-file#run-without-root-privileges
  become: true
  ansible.builtin.template:
    src: ~/dotfiles/assets/udev-rules/99-user.rules
    dest: /etc/udev/rules.d/99-{{ ansible_env.USER }}.rules
    mode: "644"
  notify: handler_reload_udev_rules

- name: handler_link_mouseless_binary
  become: true
  ansible.builtin.file:
    src: "{{ ansible_env.HOME }}/external/repos/mouseless/mouseless"
    dest: /usr/local/bin/mouseless
    state: link
    mode: "755"

- name: handler_save_iptables
  become: true
  ansible.builtin.command: iptables-save -f /etc/iptables/iptables.rules
  changed_when: false

- name: handler_ensure_iptables_service
  become: true
  ansible.builtin.systemd_service:
    scope: system
    name: iptables.service
    state: started
    enabled: true
    masked: false

- name: handler_restart_xdg_desktop_portal_termfilechooser
  ansible.builtin.systemd_service:
    scope: user
    name: xdg-desktop-portal-termfilechooser.service
    state: restarted
    enabled: true
    masked: false

- name: handler_kill_reaper_wineserver
  ansible.builtin.command: wineserver -k
  timeout: 60
  changed_when: true
  environment:
    WINEPREFIX: "{{ arch_reaper_wine_setup.wine_prefix }}"
  register: var_kill_reaper_wineserver
  failed_when:
    - var_kill_reaper_wineserver.rc != 0
    - var_kill_reaper_wineserver.rc != 1

- name: handler_restart_remind_service
  ansible.builtin.systemd_service:
    scope: user
    name: remind.service
    state: started
    enabled: true
    masked: false

- name: handler_enable_start_keyd_application_mapper_service
  ansible.builtin.systemd_service:
    scope: user
    name: keyd-application-mapper.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_send_ifconfig_service
  ansible.builtin.systemd_service:
    scope: user
    name: send-ifconfig.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_mouseless_click_service
  ansible.builtin.systemd_service:
    scope: user
    name: mouseless-click.service
    state: started
    enabled: true
    masked: false

- name: handler_ensure_fc_cache
  ansible.builtin.command: fc-cache
  changed_when: true
