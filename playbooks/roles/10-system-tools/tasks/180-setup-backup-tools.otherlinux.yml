---
- name: "[otherlinux] Setup backup tools: ensure packages"
  ansible.builtin.command: pkg install -y borgbackup
  changed_when: false

- block:
    - name: "[otherlinux] Setup backup tools: init borg repos"
      ansible.builtin.command: borg init --encryption=keyfile '{{ item.repo }}'
      environment:
        BORG_PASSCOMMAND: 'gpg --decrypt {{ ansible_env.HOME }}/secrets/{{ item.pass_file }}'
      loop: "{{ otherlinux_borg_repos_env }}"
      changed_when: false
      register: result

    - name: "[otherlinux] Setup backup tools: ensure bin folder"
      ansible.builtin.file:
        path: ~/bin
        state: directory
        mode: "755"

    - name: "[otherlinux] Setup backup tools: create backup scripts from template"
      ansible.builtin.template:
        src: ~/dotfiles/assets/scripts/backup/borg_backup_jinja_template.backup.sh
        dest: ~/bin/{{ item.sh_template }}.backup.sh
        mode: "700"
      vars:
        borg_repo: "{{ item.repo }}"
        borg_pass: "{{ item.pass_file }}"
        files: "{{ item.files }}"
      loop: "{{ otherlinux_borg_repos_env }}"

    - name: "[otherlinux] Backup seedvault every 4 hours"
      ansible.builtin.cron:
        name: "Backup seedvault every 4 hours"
        hour: "*/4"
        job: ~/bin/autogenerated-dev1-seedvault-main

    - name: "[otherlinux] Setup database tools: ensure keyfiles backup folder"
      ansible.builtin.file:
        path: ~/secrets/backup-borg-keyfiles
        state: directory
        mode: "755"

    - name: "[otherlinux] Setup backup tools: backup keyfile"
      ansible.builtin.command: >
        borg key export "{{ item.repo }}"
        '~/secrets/backup-borg-keyfiles/{{ item.repo | regex_replace("[^A-Za-z0-9]", "_") }}'
      environment:
        BORG_PASSCOMMAND: gpg --decrypt {{ ansible_env.HOME }}/secrets/{{ item.pass_file }}
      changed_when: false
      loop: "{{ otherlinux_borg_repos_env }}"

    - name: "[otherlinux] Setup backup tools: register timestamp"
      ansible.builtin.command: "date +%Y-%m-%d%H-%M-%S"
      changed_when: false
      register: tstamp

    - name: "[otherlinux] Setup backup tools: archive the keyfiles"
      ansible.builtin.shell: tar -czvf ../keyfiles-{{ user_os }}-{{ tstamp.stdout }}.tar.gz * --remove-files
      changed_when: false
      args:
        chdir: "~/secrets/backup-borg-keyfiles"
      failed_when:
        - '"stderr" in result'
        - '"Cannot stat: No such file or directory" not in result.stderr'
  ignore_errors: true
