---
- name: "[otherlinux] Setup backup tools: ensure packages"
  ansible.builtin.command: >
    pkg install -y
    gnupg
    borgbackup
  changed_when: false

- name: "[otherlinux] Setup backup tools: init borg repos"
  ansible.builtin.command: borg init --encryption=keyfile '{{ item.borg_repo }}'
  environment:
    BORG_PASSCOMMAND: 'gpg --decrypt {{ ansible_env.HOME }}/secrets/{{ item.encrypted_passphrase_file }}'
  loop:
    - { borg_repo: "{{ dev1_seedvault_borg_repo }}", encrypted_passphrase_file: moonland3344.gpg }
    - { borg_repo: "{{ dev1_reader_annotations_borg_repo }}", encrypted_passphrase_file: unreeling3484.gpg }
  changed_when: false
  register: result
  failed_when:
    - '"stderr" in result'
    - '"A repository already exists" not in result.stderr'
    - '"gpg: encrypted with" not in result.stderr'
    - '"No such file or directory" not in result.stderr'
    - '"store it at safe place" not in result.stderr'

- name: "[otherlinux] Setup backup tools: ensure bin folder"
  ansible.builtin.file:
    path: ~/bin
    state: directory
    mode: "755"

- name: "[otherlinux] Setup backup tools: create backup scripts from template"
  ansible.builtin.template:
    src: ~/dotfiles/assets/scripts/backup/borg_backup_jinja_template.backup.sh
    dest: ~/bin/{{ item.name }}.backup.sh
    mode: "700"
  vars:
    borg_repo: "{{ item.repo }}"
    borg_pass: "{{ item.pass }}"
    files: "{{ item.files }}"
  loop:
    - { name: autogenerated-dev1-seedvault-main, repo: "{{ dev1_seedvault_borg_repo }}", pass: moonland3344.gpg, files: "{{ seedvault_main_backup_env }}" }
    - { name: autogenerated-dev1-reader-annotations, repo: "{{ dev1_reader_annotations_borg_repo }}", pass: unreeling3484.gpg, files: "{{ reader_annotations_backup_env }}" }

- name: "[otherlinux] Backup seedvault every 4 hours"
  ansible.builtin.cron:
    name: "Backup seedvault every 4 hours"
    hour: "*/4"
    job: ~/bin/autogenerated-dev1-seedvault-main
