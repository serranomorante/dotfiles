---
# https://wiki.archlinux.org/title/Official_repositories#Enabling_multilib
- name: "[archlinux] Wine tools: enable multilib repository"
  become: true
  ansible.builtin.blockinfile:
    dest: /etc/pacman.conf
    insertafter: "(?m)^#\\[multilib\\]\\n#Include"
    block: |
      [multilib]
      Include = /etc/pacman.d/mirrorlist

- name: "[archlinux] Wine tools: register current wine version"
  ansible.builtin.command: which wine
  changed_when: false
  register: var_which_wine

- name: "[archlinux] Wine tools: downgrade wine"
  # https://github.com/robbert-vdh/yabridge/issues/382
  become: true
  ansible.builtin.command: downgrade --ignore always --prefer-cache 'wine-staging={{ arch_wine_staging_version }}' -- --noconfirm
  environment:
    DOWNGRADE_FROM_ALA: 1
  changed_when: true
  when: "'wine-9.21 (Staging)' not in var_which_wine.stdout"

- name: "[archlinux] Wine tools: ensure wine is installed"
  become: true
  ansible.builtin.package:
    state: present
    name:
      - winetricks
      - wine-mono
      - lutris
      - libxcomposite

# https://wiki.archlinux.org/title/Steam#Installation
- name: "[archlinux] Wine tools: ensure wine 32bit drivers"
  become: true
  ansible.builtin.package:
    state: present
    name:
      - lib32-pipewire
      - lib32-nvidia-utils
      - lib32-libxcomposite

- name: "[archlinux] Wine tools: ensure aur packages"
  aur:
    use: yay
    state: present
    name:
      - steam
      - protonplus
    aur_only: true

- name: "[archlinux] Wine tools: ensure sysctl conf"
  become: true
  ansible.builtin.copy:
    src: ~/dotfiles/assets/other/sysctl-80-gamecompatibility.conf
    dest: /etc/sysctl.d/80-gamecompatibility.conf
    owner: root
    mode: "644"

- name: "[archlinux] Wine tools: apply sysctl changes without rebooting"
  become: true
  ansible.builtin.command: sysctl --system
  changed_when: false

- name: "[archlinux] Wine tools: get reaper"
  ansible.builtin.get_url:
    url: https://www.reaper.fm/files/7.x/reaper{{ arch_reaper_wine_setup.version }}_x64-install.exe
    dest: ~/external/Downloads
    mode: "755"

- name: "[archlinux] Wine tools: setup prefixes"
  ansible.builtin.command: winecfg -v {{ item.winver | default('win10') }}
  environment:
    WINEPREFIX: "{{ item.path }}"
    WINEARCH: "{{ item.architecture }}"
  args:
    creates: "{{ item.path }}/system.reg"
  loop:
    - path: "{{ arch_reaper_wine_setup.wine_prefix }}"
      architecture: win64
      winver: win7

- name: "[archlinux] Wine tools: setup prefixes DPI"
  # https://forum.winehq.org/viewtopic.php?t=34980
  ansible.builtin.command: wine reg add "HKEY_CURRENT_USER\Control Panel\Desktop" /v LogPixels /t REG_DWORD /d {{ item.dpi | default(0x90) }} /f
  environment:
    WINEPREFIX: "{{ item.path }}"
  changed_when: true
  loop:
    - path: "{{ arch_reaper_wine_setup.wine_prefix }}"

- name: "[archlinux] Wine tools: install reaper"
  ansible.builtin.command: wine start /unix '{{ arch_reaper_wine_setup.backup_path }}/reaper{{ arch_reaper_wine_setup.version }}_x64-install.exe'
  environment:
    WINEPREFIX: "{{ arch_reaper_wine_setup.wine_prefix }}"
  args:
    creates: ~/external/.wine-win64-reaper/drive_c/Program Files/REAPER (x64)/reaper.exe

- name: "[archlinux] Wine tools: wait reaper install"
  ansible.builtin.wait_for:
    path: ~/external/.wine-win64-reaper/drive_c/Program Files/REAPER (x64)/reaper.exe
    msg: Timeout waiting for REAPER to finish installation
    delay: 5
    timeout: 300

- name: "[archlinux] Wine tools: clone wineasio"
  ansible.builtin.git:
    repo: https://github.com/wineasio/wineasio
    dest: ~/external/repos/wineasio
    depth: 1
    version: master

- name: "[archlinux] Wine tools: make 64bit wineasio"
  ansible.builtin.command: make 64
  args:
    chdir: ~/external/repos/wineasio
    creates: ~/external/repos/wineasio/build64/wineasio64.dll

- name: "[archlinux] Wine tools: substitude wine libs path"
  become: true
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/external/repos/wineasio{{ item.suffix_src }}"
    dest: "{{ item.suffix_dest }}"
    mode: "644"
  loop:
    - suffix_src: /build64/wineasio64.dll
      suffix_dest: /lib/wine/x86_64-windows/wineasio64.dll
    - suffix_src: /build64/wineasio64.dll.so
      suffix_dest: /lib/wine/x86_64-unix/wineasio64.dll.so

- name: "[archlinux] Wine tools: register wineasio"
  ansible.builtin.command: wineasio-register
  args:
    chdir: ~/external/repos/wineasio
  environment:
    WINEPREFIX: "{{ arch_reaper_wine_setup.wine_prefix }}"
  changed_when: false

- name: "[archlinux] Wine tools: get sws extension"
  ansible.builtin.get_url:
    url: https://www.sws-extension.org/download/featured/sws-{{ arch_reaper_sws_extension_setup.version }}-Windows-x64.exe
    dest: ~/external/Downloads
    mode: "755"

- name: "[archlinux] Wine tools: install sws extension"
  ansible.builtin.command: wine start /unix '{{ arch_reaper_sws_extension_setup.backup_path }}/sws-{{ arch_reaper_sws_extension_setup.version }}-Windows-x64.exe'
  environment:
    WINEPREFIX: "{{ arch_reaper_wine_setup.wine_prefix }}"
  args:
    creates: ~/external/.wine-win64-reaper/drive_c/users/serranomorante/AppData/Roaming/REAPER/UserPlugins/reaper_sws-x64.dll

- name: "[archlinux] Wine tools: ensure custom script folder"
  ansible.builtin.file:
    state: directory
    recurse: true
    path: "{{ arch_reaper_wine_setup.wine_prefix }}/drive_c/users/serranomorante/AppData/Roaming/REAPER/Scripts/custom"

- name: "[archlinux] Wine tools: copy custom script"
  ansible.builtin.copy:
    src: ~/dotfiles/assets/scripts/reaper/alternate_position.lua
    dest: "{{ arch_reaper_wine_setup.wine_prefix }}/drive_c/users/serranomorante/AppData/Roaming/REAPER/Scripts/custom/"
    mode: "644"
