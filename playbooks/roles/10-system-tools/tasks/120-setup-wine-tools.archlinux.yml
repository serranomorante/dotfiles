---
# https://wiki.archlinux.org/title/Official_repositories#Enabling_multilib
- name: "[archlinux] Wine tools: enable multilib repository"
  become: true
  ansible.builtin.blockinfile:
    dest: /etc/pacman.conf
    insertafter: "(?m)^#\\[multilib\\]\\n#Include"
    block: |
      [multilib]
      Include = /etc/pacman.d/mirrorlist

- name: "[archlinux] Wine tools: ensure wine is installed"
  become: true
  ansible.builtin.package:
    state: present
    name:
      - wine-staging
      - wine-mono
      - lutris

# https://wiki.archlinux.org/title/Steam#Installation
- name: "[archlinux] Wine tools: ensure wine 32bit drivers"
  become: true
  ansible.builtin.package:
    state: present
    name:
      - lib32-pipewire
      - lib32-nvidia-utils

- name: "[archlinux] Wine tools: ensure aur packages"
  aur:
    use: yay
    state: present
    name:
      - steam
      - protonplus
    aur_only: true

- name: "[archlinux] Wine tools: ensure sysctl conf"
  become: true
  ansible.builtin.copy:
    src: ~/dotfiles/assets/other/sysctl-80-gamecompatibility.conf
    dest: /etc/sysctl.d/80-gamecompatibility.conf
    owner: root
    mode: "644"

- name: "[archlinux] Wine tools: apply sysctl changes without rebooting"
  become: true
  ansible.builtin.command: sysctl --system
  changed_when: false

- name: "[archlinux] Wine tools: setup prefixes"
  ansible.builtin.command: winecfg -v {{ item.winver | default('win10') }}
  environment:
    WINEPREFIX: "{{ item.path }}"
    WINEARCH: "{{ item.architecture }}"
  args:
    creates: "{{ item.path }}/system.reg"
  loop:
    - { path: "{{ ansible_env.HOME }}/external/.wine-win64-photo-editing", architecture: win64, winver: win7 }

- name: "[archlinux] Wine tools: ensure winetricks for .wine-win64-photo-editing"
  # https://gist.github.com/ansulev/0f9a1449d40d63ed8251c84d61156411?permalink_comment_id=4740493
  ansible.builtin.command: >
    winetricks atmlib gdiplus msxml3 msxml6 vcrun2005 vcrun2005sp1 vcrun2008 ie6 fontsmooth-rgb gecko
  environment:
    WINEPREFIX: "{{ ansible_env.HOME }}/external/.wine-win64-photo-editing"
  args:
    creates: ~/external/.wine-win64-photo-editing/drive_c/windows/system32/gecko/plugin/npmshtml.dll

- name: "[archlinux] Wine tools: ensure photoshop"
  ansible.builtin.command: wine start /unix '{{ wine_photoshop_installer_path }}'
  environment:
    WINEPREFIX: "{{ ansible_env.HOME }}/external/.wine-win64-photo-editing"
  args:
    creates: ~/.local/share/applications/wine/Programs/Photoshop.desktop
