---
- name: "[archlinux] Other tools: ensure aur packages"
  aur:
    use: yay
    state: present
    name:
      - ccze
      - yt-dlp

- name: "[archlinux] Other tools: install jdownloader"
  community.general.flatpak:
    name: org.jdownloader.JDownloader
    state: latest

- name: "[archlinux] Other tools: ensure custom jdownloader desktop"
  become: true
  ansible.builtin.copy:
    src: flatpak-jdownloader.desktop
    dest: /var/lib/flatpak/exports/share/applications/org.jdownloader.JDownloader.desktop
    owner: "{{ ansible_env.USER }}"
    mode: "644"
  notify: handler_update_desktop_database

- name: "[archlinux] Other tools: ensure font directory exists"
  ansible.builtin.file:
    path: ~/.local/share/fonts/{{ item | basename | splitext | first }}
    state: directory
    mode: "775"
  loop: "{{ arch_fonts }}"

- name: "[archlinux] Other tools: install font"
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: ~/.local/share/fonts/{{ item | basename | splitext | first }}
    remote_src: true
  loop: "{{ arch_fonts }}"
  notify: handler_ensure_fc_cache

- name: "[archlinux] Other tools: ensure security tools folder"
  ansible.builtin.file:
    path: ~/apps/security-tools
    state: directory
    mode: "755"

- name: "[archlinux] Other tools: install bitwarden"
  ansible.builtin.get_url:
    url: https://bitwarden.com/download/?app=desktop&platform=linux&variant=appimage
    dest: ~/apps/security-tools/bitwarden
    force: true
    mode: "755"

- name: "[archlinux] Other tools: symlink bitwarden"
  ansible.builtin.file:
    state: link
    src: ~/apps/security-tools/bitwarden
    dest: ~/bin/bitwarden

- name: "[archlinux] Other tools: prepare .desktop and mimetype"
  ansible.builtin.shell: |
    update-desktop-database ~/.local/share/applications
    xdg-mime default bitwarden.desktop x-scheme-handler/bitwarden
  changed_when: false
  notify: "10-system-tools : handler_update_desktop_database"

- name: "[archlinux] Other tools: add no-internet group"
  become: true
  ansible.builtin.group:
    state: present
    name: no-internet

- name: "[archlinux] Other tools: add user to no-internet group"
  become: true
  ansible.builtin.user:
    append: true
    groups: no-internet
    name: "{{ ansible_env.USER }}"

- name: "[archlinux] Other tools: block internet using iptables"
  become: true
  ansible.builtin.iptables:
    action: insert
    rule_num: 1
    chain: OUTPUT
    gid_owner: no-internet
    jump: REJECT

- name: "[archlinux] Other tools: block internet using iptables"
  become: true
  ansible.builtin.iptables:
    action: append
    rule_num: 1
    destination: 192.168.1.0/24
    chain: OUTPUT
    gid_owner: no-internet
    jump: ACCEPT

- name: "[archlinux] Other tools: block internet using iptables"
  become: true
  ansible.builtin.iptables:
    action: append
    rule_num: 1
    destination: 127.0.0.0/8
    chain: OUTPUT
    gid_owner: no-internet
    jump: ACCEPT

- name: "force-handler"
  ansible.builtin.command: echo
  changed_when: true
  notify:
    - handler_save_iptables
    - handler_ensure_iptables_service
