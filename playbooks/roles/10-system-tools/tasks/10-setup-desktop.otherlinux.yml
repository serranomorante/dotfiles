---
- name: "[otherlinux] Setup desktop: download dotfiles"
  ansible.builtin.git:
    repo: https://github.com/serranomorante/dotfiles.git
    dest: ~/dotfiles
    recursive: false
    force: true
    depth: 1
    version: main

# https://superuser.com/a/1407685
# https://forum.ansible.com/t/ansible-with-gpg-agent-prompts-for-private-key-password-constantly/30053/5
- name: "[otherlinux] Setup desktop: setup .bashrc"
  ansible.builtin.blockinfile:
    dest: "{{ item.script }}"
    create: true
    marker: "## {mark} ANSIBLE MANAGED BLOCK - SETUP DESKTOP"
    block: |
      {% if 'bashrc' in item.script %}
      alias cls='clear && echo -en "\e[3J"'
      export PATH="$HOME/bin:$PATH"
      export GPG_TTY=$(tty)
      export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
      {% endif %}
    mode: "744"
  loop:
    - { script: ~/.bashrc }

- name: "[otherlinux] Setup desktop: setup packages"
  # termux-api == termux-notification
  ansible.builtin.command: >
    pkg install -y
    git
    which
    gnupg
    cronie
    pinentry
    termux-services
    termux-api
    remind
    ossp-uuid
  changed_when: false

- name: "[otherlinux] Setup desktop: ensure folders"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "755"
  vars:
    pkg: remind
  loop:
    - /data/data/com.termux/files/home/.termux/boot
    - /data/data/com.termux/files/usr/var/service/{{ pkg }}/log # $PREFIX
    - /data/data/com.termux/files/home/.config/remind/

- name: "[otherlinux] Setup desktop: link remind"
  ansible.builtin.file:
    src: /data/data/com.termux/files/usr/share/termux-services/svlogger
    dest: /data/data/com.termux/files/usr/var/service/{{ pkg }}/log/run
    state: link
    force: true
    mode: "755"
  vars:
    pkg: remind

- name: "[otherlinux] Setup desktop: create reminders.rem file"
  ansible.builtin.copy:
    dest: /data/data/com.termux/files/home/.config/remind/reminders.rem
    content: "REM MSG Test"
    force: false
    mode: "700"

- name: "[otherlinux] Setup desktop: create rem script"
  ansible.builtin.copy:
    dest: /data/data/com.termux/files/home/bin/{{ item.name }}
    content: |
      #!/bin/sh
      {{ item.content }}
    mode: "755"
  loop:
    - name: rem
      content: /data/data/com.termux/files/usr/bin/remind '-i$OnceFile="/data/data/com.termux/files/home/.config/remind/oncefile"' '-knotify %s' -a -q "$@" /data/data/com.termux/files/home/.config/remind/reminders.rem
    - name: notify
      content: |
        sleep 1
        termux-notification --content "$@"

- name: "[otherlinux] Setup desktop: add remind service"
  ansible.builtin.copy:
    dest: /data/data/com.termux/files/usr/var/service/{{ pkg }}/run
    content: |
      #!/bin/sh
      exec 2>&1
      exec /data/data/com.termux/files/usr/bin/{{ pkg }} -z '-i$OnceFile="/data/data/com.termux/files/home/.config/remind/oncefile"' '-knotify %s' /data/data/com.termux/files/home/.config/remind/reminders.rem
    mode: "700"
  vars:
    pkg: remind

- name: "[otherlinux] Setup desktop: ensure services"
  ansible.builtin.command: sv-enable {{ item }}
  loop:
    - sshd
    - crond
  changed_when: false

- name: "[otherlinux] Setup desktop: ensure boot folder"
  ansible.builtin.file:
    path: /data/data/com.termux/files/home/.termux/boot
    state: directory
    mode: "755"

- name: "[otherlinux] Setup desktop: register pinentry"
  ansible.builtin.command: which pinentry-tty
  register: pinentry_tty_path
  changed_when: false

- name: "[otherlinux] Setup desktop: setup gnupg"
  ansible.builtin.blockinfile:
    marker: "## {mark} ANSIBLE MANAGED BLOCK - SETUP GNUGP"
    dest: ~/dotfiles/gnupg/dot-gnupg/gpg-agent.conf
    insertafter: "EOF"
    mode: "700"
    block: |
      pinentry-program {{ pinentry_tty_path.stdout }}
      default-cache-ttl 34560000
      max-cache-ttl 34560000
      enable-ssh-support
  when: pinentry_tty_path is succeeded
  notify: "10-system-tools : handlergroup_restart_gpg_services"

- name: "[otherlinux] Setup desktop: ensure startup"
  ansible.builtin.copy:
    dest: /data/data/com.termux/files/home/.termux/boot/10-start-sshd
    content: |
      #!/data/data/com.termux/files/usr/bin/sh
      termux-wake-lock
      gpgconf --launch gpg-agent
      sv-enable sshd
      sv-enable remind
      eval `ssh-agent -s`
    mode: "700"
