---
- name: "[archlinux] Setup backup tools: ensure packages"
  become: true
  ansible.builtin.package:
    state: present
    name: borg

- name: "[archlinux] Setup backup tools: ensure borg env variables in sudoers file"
  become: true
  ansible.builtin.blockinfile:
    dest: /etc/sudoers
    marker: "## {mark} ANSIBLE MANAGED BLOCK - SETUP BORG"
    block: Defaults env_keep += "BORG_*"
    validate: visudo -cf %s

- block:
    - name: "[archlinux] Setup backup tools: init borg repos"
      ansible.builtin.command: borg init --encryption=keyfile '{{ item.repo }}'
      environment:
        BORG_PASSCOMMAND: gpg --decrypt {{ ansible_env.HOME }}/secrets/{{ item.pass_file }}
      loop: "{{ archlinux_borg_repos_env }}"
      changed_when: false
      register: result

    - name: "[archlinux] Setup backup tools: create backup scripts from template"
      ansible.builtin.template:
        src: ~/dotfiles/assets/scripts/backup/borg_backup_jinja_template.backup.sh
        dest: ~/bin/{{ item.sh_template }}.backup.sh
        mode: "744"
      vars:
        borg_repo: "{{ item.repo }}"
        borg_pass: "{{ item.pass_file }}"
        files: "{{ item.files }}"
      loop: "{{ archlinux_borg_repos_env }}"

    - name: "[archlinux] Setup backup tools: ensure borg backup timer"
      ansible.builtin.systemd_service:
        scope: user
        name: "{{ item.service }}.timer"
        state: started
        enabled: true
        masked: false
      loop:
        - { service: every-hour-backup@dev1-config-files }
        - { service: every-8-hours-backup@dev1-PKM }
        - { service: every-4-hours-backup@dev1-notes }
        - { service: every-hour-backup@dev2-config-files }
        - { service: every-8-hours-backup@dev2-PKM }
        - { service: every-4-hours-backup@dev2-notes }
        - { service: every-hour-backup@dev3-config-files }
        - { service: every-8-hours-backup@dev3-PKM }
        - { service: every-4-hours-backup@dev3-notes }

    - name: "[archlinux] Setup backup tools: ensure keyfiles backup folder"
      ansible.builtin.file:
        path: ~/secrets/backup-borg-keyfiles
        state: directory
        mode: "755"

    - name: "[archlinux] Setup backup tools: backup keyfile"
      ansible.builtin.command: >
        borg key export "{{ item.repo }}"
        '~/secrets/backup-borg-keyfiles/{{ item.repo | regex_replace("[^A-Za-z0-9]", "_") }}'
      environment:
        BORG_PASSCOMMAND: gpg --decrypt {{ ansible_env.HOME }}/secrets/{{ item.pass_file }}
      changed_when: false
      loop: "{{ archlinux_borg_repos_env }}"

    - name: "[archlinux] Setup backup tools: register timestamp"
      ansible.builtin.command: "date +%Y-%m-%d%H-%M-%S"
      changed_when: false
      register: tstamp

    - name: "[archlinux] Setup backup tools: archive the keyfiles"
      ansible.builtin.shell: tar -czvf ../keyfiles-{{ user_os }}-{{ tstamp.stdout }}.tar.gz * --remove-files
      changed_when: false
      args:
        chdir: "~/secrets/backup-borg-keyfiles"
  ignore_errors: true
