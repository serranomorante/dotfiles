---
- name: "[archlinux] Setup browser tools: ensure packages"
  become: true
  ansible.builtin.package:
    name:
      - chromium # gives the user more control from the cli
      - ruby # to install extensionator
      - jdk-openjdk # to build react-devtools

- name: "[archlinux] Setup browser tools: ensure aur packages"
  aur:
    use: yay
    state: present
    name: brave-bin

- name: "[archlinux] Setup browser tools: ensure folder exists"
  ansible.builtin.file:
    state: directory
    recurse: true
    path: ~/apps/browser-tools/chrome/extensions

- name: "[archlinux] Setup browser tools: get chrome-session-dump"
  ansible.builtin.get_url:
    url: https://github.com/lemnos/chrome-session-dump/releases/download/v0.0.2/chrome-session-dump-linux
    dest: ~/apps/browser-tools/chrome/chrome-session-dump-linux
    force: true
    mode: "755"

- name: "[archlinux] Setup browser tools: symlink chrome-session-dump"
  ansible.builtin.file:
    src: ~/apps/browser-tools/chrome/chrome-session-dump-linux
    dest: ~/bin/chrome-session-dump
    state: link

- name: "[archlinux] Setup browser tools: ensure ruby packages"
  community.general.gem:
    name: extensionator
    state: present

- name: "[archlinux] Setup browser tools: clone chrome extensions"
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: ~/repos/{{ item.name | default(item.repo) | basename }}
    version: "{{ item.version | default('HEAD') }}"
    depth: 1
    single_branch: true
  register: var_clone_chrome_extensions
  failed_when:
    - "'msg' in var_clone_chrome_extensions"
    - "'Local modifications exist in the destination' not in var_clone_chrome_extensions.msg"
  loop:
    - repo: https://github.com/jimschubert/NewTab-Redirect
    - repo: https://github.com/philc/vimium
    - repo: https://github.com/kg8m/chrome-show-tab-numbers
    - repo: https://github.com/facebook/react
      version: "{{ facebook_react_extension_version }}"
    - repo: https://github.com/karlicoss/promnesia
    - repo: https://github.com/microsoft/playwright-mcp

- name: "[archlinux] Setup browser tools: set fact fact_changed_extensions"
  ansible.builtin.set_fact:
    fact_changed_extensions: "{{ fact_changed_extensions | default({}) | combine({extension_name: item.changed}) }}"
  vars:
    extension_name: "{{ item.invocation.module_args.repo | basename }}"
  loop: "{{ var_clone_chrome_extensions.results }}"

- name: "[archlinux] Setup browser tools: register var_playwright_mcp_browser_key"
  ansible.builtin.shell: gpg --homedir '{{ ansible_env.HOME }}/.gnupg' --decrypt ~/secrets/playwright_mcp_browser_key.gpg 2>/dev/null
  changed_when: true
  register: var_playwright_mcp_browser_key

- name: "[archlinux] Setup browser tools: create playwright_mcp_tempdir"
  ansible.builtin.tempfile:
    state: directory
    suffix: playwright_mcp_tempdir
  register: playwright_mcp_tempdir

- name: "[archlinux] Setup browser tools: dynamically generate playwright_mcp_auth_token.patch"
  ansible.builtin.template:
    src: playwright_mcp_auth_token.patch
    dest: "{{ playwright_mcp_tempdir.path }}/playwright_mcp_auth_token.patch"
    mode: "644"

- name: slkdjlf
  ansible.builtin.debug:
    msg: "{{ fact_changed_extensions }}"

- name: "[archlinux] Setup browser tools: patch playwright mcp extension"
  ansible.posix.patch:
    src: "{{ playwright_mcp_tempdir.path }}/playwright_mcp_auth_token.patch"
    basedir: ~/repos/playwright-mcp
    strip: 1
  when: fact_changed_extensions['playwright-mcp']

- name: "[archlinux] Setup browser tools: build playwright mcp"
  ansible.builtin.shell: npm ci npm && npm run build
  args:
    chdir: ~/repos/playwright-mcp/extension
  changed_when: fact_changed_extensions['playwright-mcp']
  when: fact_changed_extensions['playwright-mcp']

- name: "[archlinux] Setup browser tools: check if NewTab-Redirect already patched"
  ansible.builtin.shell: |
    git ls-files -m
  register: newtab_redirect_modified_files
  args:
    chdir: ~/repos/NewTab-Redirect
  changed_when: false

- name: "[archlinux] Setup browser tools: patch NewTab-Redirect extension"
  ansible.builtin.shell: |
    git apply ~/dotfiles/assets/patches/chrome_extensions/{{ item }}
  args:
    chdir: ~/repos/NewTab-Redirect
  loop:
    - extension_new_tab_redirect.patch
  when: '"main.html" not in newtab_redirect_modified_files.stdout'
  changed_when: false

- name: "[archlinux] Setup browser tools: check if react-devtools already patched"
  ansible.builtin.shell: |
    git ls-files -m
  register: react_devtools_modified_files
  args:
    chdir: ~/repos/react
  changed_when: false

- name: "[archlinux] Setup browser tools: patch react-devtools extension"
  ansible.builtin.shell: |
    git apply ~/dotfiles/assets/patches/chrome_extensions/{{ item }}
  args:
    chdir: ~/repos/react
  loop:
    - extension_react_devtools.patch
  when: '"utils.js" not in react_devtools_modified_files.stdout'
  changed_when: false

- name: "[archlinux] Setup browser tools: patch vimium extension"
  ansible.posix.patch:
    src: ~/dotfiles/assets/patches/chrome_extensions/extension_vimium_config.patch
    basedir: ~/repos/vimium
    strip: 1

- name: "[archlinux] Setup browser tools: prepare react-devtools"
  ansible.builtin.shell: |
    yarn install
    yarn build-for-devtools
  args:
    creates: ~/repos/react/build/bundle-sizes.json
    chdir: ~/repos/react

- name: "[archlinux] Setup browser tools: build chrome react-devtools extension"
  ansible.builtin.shell: |
    yarn build:chrome
  args:
    creates: ~/repos/react/packages/react-devtools-extensions/chrome/build/ReactDevTools.zip
    chdir: ~/repos/react/packages/react-devtools-extensions

- name: "[archlinux] Setup browser tools: generate key file"
  ansible.builtin.shell: |
    openssl genrsa -out ~/apps/browser-tools/chrome/extensions/identity.pem 2048
  args:
    creates: ~/apps/browser-tools/chrome/extensions/identity.pem

- name: "[archlinux] Setup browser tools: build external crx"
  ansible.builtin.shell: >
    ~/.local/share/gem/ruby/{{ arch_ruby_version }}/bin/extensionator
    -d {{ item.path | default(var_default_d) }}
    -i ~/apps/browser-tools/chrome/extensions/identity.pem
    -o {{ item.path | default(var_default_d) }}/{{ item.name }}.crx
  vars:
    var_default_d: ~/repos/{{ item.name }}
  args:
    creates: "{{ item.path | default(var_default_d) }}/{{ item.name }}.crx"
  loop: "{{ chromium_local_extensions }}"

- name: "[archlinux] Setup browser tools: build react-devtools crx"
  # We have to do this because the `manifest.json` file is not on the root of the repo
  ansible.builtin.shell: >
    ~/.local/share/gem/ruby/{{ arch_ruby_version }}/bin/extensionator
    -d ~/repos/react/packages/react-devtools-extensions/chrome/build/unpacked/
    -i ~/apps/browser-tools/chrome/extensions/identity.pem
    -o ~/repos/react/packages/react-devtools-extensions/chrome/build/unpacked/react-devtools.crx
  args:
    creates: ~/repos/react/packages/react-devtools-extensions/chrome/build/unpacked/react-devtools.crx

- name: "[archlinux] Setup browser tools: build promnesia"
  ansible.builtin.command: |
    npm ci
    ~/apps/PKM/.venv/bin/python build --chrome --release
  args:
    chdir: ~/repos/promnesia/extension
    creates: ~/repos/promnesia/extension/dist/chrome/manifest.json
  ignore_errors: true

- name: "[archlinux] Setup browser tools: build promnesia crx"
  ansible.builtin.shell: >
    ~/.local/share/gem/ruby/{{ arch_ruby_version }}/bin/extensionator
    -d ~/repos/promnesia/extension/dist/chrome
    -i ~/apps/browser-tools/chrome/extensions/identity.pem
    -o ~/repos/promnesia/extension/dist/chrome/promnesia.crx
  args:
    chdir: ~/repos/promnesia/extension/dist/chrome
    creates: ~/repos/promnesia/extension/dist/chrome/promnesia.crx

- name: "[archlinux] Setup browser tools: create browser policy directory for all users"
  become: true
  ansible.builtin.file:
    path: /etc/{{ item }}/policies/managed
    state: directory
    recurse: true
  loop:
    - chromium
    - brave

- name: "[archlinux] Setup browser tools: create chromium policy file for all users"
  become: true
  ansible.builtin.template:
    src: ~/dotfiles/assets/other/browser-custom-policy.json
    dest: "/etc/{{ item }}/policies/managed/browser-custom-policy.json"
    owner: root
    mode: "644"
  loop:
    - chromium
    - brave

- name: "[archlinux] Setup browser tools: create extensions directory for all users"
  become: true
  ansible.builtin.file:
    path: /usr/share/chromium/extensions
    state: directory
    recurse: true

- name: "[archlinux] Setup browser tools: create extension files"
  become: true
  ansible.builtin.copy:
    dest: /usr/share/chromium/extensions/{{ item }}.json
    content: |
      { "external_update_url": "https://clients2.google.com/service/update2/crx" }
    mode: "644"
  loop:
    - "{{ extension_floccus }}"
    - "{{ extension_memex }}"
    - "{{ extension_chrome_regex_search }}"
    - "{{ extension_monolith }}"

- name: "[archlinux] Setup browser tools: copy brave desktop file to user directory"
  become: true
  ansible.builtin.copy:
    src: /usr/share/applications/brave-browser.desktop
    dest: "{{ ansible_env.HOME }}/.local/share/applications/brave-browser.desktop"
    owner: "{{ ansible_env.USER }}"
    mode: "644"

- name: "[archlinux] Setup browser tools: clean packages"
  become: true
  ansible.builtin.package:
    force: true
    state: absent
    name: jdk-openjdk

- name: "[archlinux] Setup browser tools: run handlers"
  ansible.builtin.command: echo
  changed_when: true
  notify:
    - handler_generate_chrome_debugger_service
    - handler_ensure_brave_desktop_file
