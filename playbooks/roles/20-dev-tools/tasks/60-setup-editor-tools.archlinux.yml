---
- name: "[archlinux] Editor tools: ensure nvim plugins"
  ansible.builtin.git:
    repo: https://github.com/{{ item.repo }}
    dest: ~/.local/share/nvim/site/pack/plugins/{{ item.folder }}/{{ item.name | default(item.repo) | basename }}
    single_branch: true
    force: true
    depth: 100
    version: "{{ item.version | default('HEAD') }}"
  async: 1000
  poll: 0
  loop: "{{ neovim_plugins }}"

# - name: "[archlinux] Editor tools: install coc.nvim"
#   ansible.builtin.command: npm ci
#   args:
#     chdir: ~/.local/share/nvim/site/pack/plugins/start/coc.nvim
#     creates: ~/.local/share/nvim/site/pack/plugins/start/coc.nvim/build/index.js

- name: "[archlinux] Editor tools: ensure aur packages"
  aur:
    use: yay
    state: present
    name:
      - ctags-git

- name: "[archlinux] Editor tools: create treesitter tempdir"
  ansible.builtin.tempfile:
    state: directory
    suffix: treesitter_tempdir
  register: treesitter_tempdir

- name: "[archlinux] Editor tools: download treesitter CLI"
  ansible.builtin.get_url:
    url: https://github.com/tree-sitter/tree-sitter/releases/download/v0.24.4/tree-sitter-linux-x64.gz
    dest: "{{ treesitter_tempdir.path }}/"
    force: true
    mode: "755"

- name: "[archlinux] Editor tools: uncompress treesitter (.gz no supported)"
  ansible.builtin.command: gunzip -d {{ treesitter_tempdir.path }}/tree-sitter-linux-x64.gz
  args:
    creates: "{{ treesitter_tempdir.path }}/tree-sitter-linux-x64"

- name: "[archlinux] Editor tools: install treesitter CLI"
  ansible.builtin.copy:
    src: "{{ treesitter_tempdir.path }}/tree-sitter-linux-x64"
    dest: ~/bin/tree-sitter
    mode: "755"

- name: "[archlinux] Editor tools: clone treesitter parsers"
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: ~/repos/{{ item.name | default(item.repo) | basename }}
    version: "{{ item.version | default('HEAD') }}"
    depth: 1
    force: true
    single_branch: true
  loop:
    - { repo: https://github.com/tree-sitter/tree-sitter-typescript, version: "dcbbd9406a63fd1e0a42c90ab9451c6127ebd4b3" }

# Create this entry kdewallet/neovim/intelephense using kwalletmanager
- name: "[archlinux] Editor tools: setup intelephense key if available"
  ansible.builtin.shell: |
    mkdir -p ~/intelephense
    {{ kwallet_query_cmd }} && echo "$({{ kwallet_query_cmd }})" > ~/intelephense/licence.txt
  vars:
    folder_entry: intelephense
    wallet_name: kdewallet
    folder_name: neovim
    kwallet_query_cmd: kwallet-query -r {{ folder_entry }} {{ wallet_name }} -f {{ folder_name }}
  args:
    creates: ~/intelephense/licence.txt
  ignore_errors: true

- name: "[archlinux] Editor tools: apply patches to nvim plugins"
  ansible.posix.patch:
    src: ~/dotfiles/assets/patches/nvim/{{ item.patch }}
    basedir: "{{ item.cwd }}"
    strip: 1
  loop:
    - cwd: ~/.local/share/nvim/site/pack/plugins/opt/gp
      patch: gp_nvim.patch
    - cwd: ~/.local/share/nvim/site/pack/plugins/start/trailblazer
      patch: trailblazer.patch

- name: "[archlinux] Editor tools: generate helptags"
  ansible.builtin.command: nvim --headless -c "helptags ALL" -c "quit"
  changed_when: false

- name: "[archlinux] Editor tools: update treesitter parsers"
  ansible.builtin.command: nvim --headless -c "TSUpdate" -c "quit"
  changed_when: false
