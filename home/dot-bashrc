#
# ~/.bashrc
#

# All this file will be source by bass fish plugin in config.fish
# ---------------------------------------------------------------

# The line below is commented because it wasn't working with
# bass fish plugin.

# If not running interactively, don't do anything
# [[ $- != *i* ]] && return

# alias ls='ls --color=auto'
#
brew_ubuntu_path=/home/linuxbrew/.linuxbrew/bin/brew

if [ -x "$brew_ubuntu_path" ]; then
    eval "$($brew_ubuntu_path shellenv)"
fi


if [ -x "$(command -v eza)" ]; then
    alias ls='eza -1 -a -h --git --sort modified -l --icons always --color always'
fi

alias grep='grep --color=auto'

# https://jesrui.sdf-eu.org/remember-all-your-bash-history-forever.html
export HISTTIMEFORMAT='%F %T '
export HISTFILESIZE=-1
export HISTSIZE=-1
export HISTCONTROL=ignoredups
export HISTIGNORE=?:??
# append to history, don't overwrite it
shopt -s histappend
# attempt to save all lines of a multiple-line command in the same history entry
shopt -s cmdhist
# save multi-line commands to the history with embedded newlines
shopt -s lithist

# Clear a terminal screen for real
# https://stackoverflow.com/a/5367075
alias cls='printf "\033c"'

# path env variables
# This fixes poetry not being found
export PATH="$HOME/.local/bin:$PATH"
# Make ~/bin take priority over ~/.local/bin
export PATH="$HOME/bin:$PATH"
# Add pynvim to path
export PATH="/usr/lib/python3.11/site-packages:$PATH"
export FONTCONFIG_PATH=/etc/fonts
export COLORTERM=truecolor
# For go packages
if [ -x "$(command -v go)" ]; then
    export PATH="$PATH:$(go env GOBIN):$(go env GOPATH)/bin"
fi

# system env variables
export SYSTEMD_PAGER=""
# https://wiki.archlinux.org/title/Neovim#Use_as_a_pager
# export PAGER="nvimpager"

# fzf use df instead of find
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_DEFAULT_OPTS="--layout=reverse --border"

export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

# Wireplumber logging
# 0. critical warnings and fatal errors (C & E in the log)
# 1. warnings (W)
# 2. normal messages (M)
# 3. informational messages (I)
# 4. debug messages (D)
# 5. trace messages (T)
export WIREPLUMBER_DEBUG=3

if command -v fzf &>/dev/null; then
    # Set up fzf key bindings and fuzzy completion
    eval "$(fzf --bash)"
fi

# Alias nvim to include --server & --listen arguments
if command -v nvim &>/dev/null && command -v tmux &>/dev/null && [ -n "$TMUX" ]; then
    CUSTOM_NVIM_LISTEN_ADDRESS=$(tmux show-environment CUSTOM_NVIM_LISTEN_ADDRESS 2>/dev/null | sed "s:^.*=::")
    if [ -n "$CUSTOM_NVIM_LISTEN_ADDRESS" ]; then
        if command -v nvr &> /dev/null; then
            nvr --nostart -s --servername "$CUSTOM_NVIM_LISTEN_ADDRESS"
            if [ $? -eq 0 ]; then
                alias nvim='nvim --remote-ui --server "$CUSTOM_NVIM_LISTEN_ADDRESS"'
            else
                alias nvim='nvim --listen "$CUSTOM_NVIM_LISTEN_ADDRESS"'
            fi
        fi
    fi
fi

# https://github.com/mfussenegger/nvim-dap/blob/e64ebf3309154b578a03c76229ebf51c37898118/doc/dap.txt#L960
# Available log levels:
# TRACE
# DEBUG
# INFO
# WARN
# ERROR
export DAP_LOG_LEVEL=INFO
export LSP_LOG_LEVEL=INFO
export CONFORM_LOG_LEVEL=INFO
export NEOTEST_LOG_LEVEL=INFO
if [ -z "$DAP_OVERRIDED_DISPLAY" ] && [ -n "$DISPLAY" ]; then
    export DAP_OVERRIDED_DISPLAY="$DISPLAY" # defaults to DISPLAY
fi

## BEGIN ANSIBLE MANAGED BLOCK - SETUP NODE
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
## END ANSIBLE MANAGED BLOCK - SETUP NODE
## BEGIN ANSIBLE MANAGED BLOCK - SETUP PYTHON
export PYENV_ROOT="$HOME/.pyenv"
export PATH="/usr/bin/pyenv:$PATH"
eval "$(pyenv init -)"
## END ANSIBLE MANAGED BLOCK - SETUP PYTHON
## BEGIN ANSIBLE MANAGED BLOCK - SETUP ENCRYPTION
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
## END ANSIBLE MANAGED BLOCK - SETUP ENCRYPTION

if command -v zoxide &>/dev/null; then
    eval "$(zoxide init bash)"
fi

if command -v nnn &>/dev/null; then
    export NNN_PLUG='p:preview-tui;l:nmount'
    alias nnn='nnn -JRHdaA -Pp'
fi
